{"ast":null,"code":"import _extends from \"/Users/Jake/hairwebsite-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"/Users/Jake/hairwebsite-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Jake/hairwebsite-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/Jake/hairwebsite-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jake/hairwebsite-web/src/views/RegisterPage/RegisterPage.js\";\nimport React, { useState, useEffect } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\"; // core components\n\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\";\nimport { useHistory } from 'react-router-dom';\nimport Swal from 'sweetalert2'; //import image from \"assets/img/bg7.jpg\";\n\nimport image from \"assets/img/hands-blow-drying-hair.jpg\";\nimport logo from \"assets/img/badge.png\";\nvar dashboardRoutes = [];\nvar useStyles = makeStyles(styles);\n\nvar LoginPage = function LoginPage(props) {\n  var classes = useStyles();\n\n  var _useHistory = useHistory(),\n      push = _useHistory.push;\n\n  var _React$useState = React.useState(\"cardHidden\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cardAnimaton = _React$useState2[0],\n      setCardAnimation = _React$useState2[1];\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isEmpty = _useState10[0],\n      setIsEmpty = _useState10[1];\n\n  var signup =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (passwordsMatch()) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", Swal.fire({\n                icon: 'warning',\n                title: \"Validation Error\",\n                text: \"Passwords Don't Match\"\n              }));\n\n            case 2:\n              _context.prev = 2;\n              url = \"http://localhost:8080/user/register\";\n              _context.next = 6;\n              return fetch(url, {\n                method: \"POST\",\n                body: JSON.stringify({\n                  name: firstName,\n                  email: email,\n                  password: password\n                }),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 6:\n              Swal.fire('Success!', 'Thank you for making an account with us!', 'success');\n              push(\"/login\");\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              Swal.fire({\n                icon: 'error',\n                title: \"Error\",\n                text: _context.t0\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n\n    return function signup() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var passwordsMatch = function passwordsMatch() {\n    return password === confirmPassword;\n  };\n\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n\n  var rest = _extends({}, props);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Header, Object.assign({\n    color: \"transparent\",\n    routes: dashboardRoutes,\n    logo: logo,\n    brand: \"Hair by Dalton\",\n    rightLinks: React.createElement(HeaderLinks, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }),\n    fixed: true,\n    changeColorOnScroll: {\n      height: 400,\n      color: \"white\"\n    }\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.pageHeader,\n    style: {\n      backgroundImage: \"url(\" + image + \")\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"top center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes[cardAnimaton],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    className: classes.cardHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Create Account\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    labelText: \"First Name\",\n    id: \"first\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"text\",\n      value: firstName,\n      onChange: function onChange(e) {\n        return setFirstName(e.target.value);\n      },\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(People, {\n        className: classes.inputIconsColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(CustomInput, {\n    labelText: \"Email\",\n    id: \"email\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"email\",\n      value: email,\n      onChange: function onChange(e) {\n        return setEmail(e.target.value);\n      },\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Email, {\n        className: classes.inputIconsColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(CustomInput, {\n    labelText: \"Password\",\n    id: \"pass\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"password\",\n      value: password,\n      onChange: function onChange(e) {\n        return setPassword(e.target.value);\n      },\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: classes.inputIconsColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"lock_outline\")),\n      autoComplete: \"off\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(CustomInput, {\n    labelText: \"Confirm Password\",\n    id: \"passConfirm\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"password\",\n      value: confirmPassword,\n      onChange: function onChange(e) {\n        return setConfirmPassword(e.target.value);\n      },\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: classes.inputIconsColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"lock_outline\")),\n      autoComplete: \"off\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })), React.createElement(\"a\", {\n    href: \"/login\",\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Already have an account? Login here\"), React.createElement(CardFooter, {\n    className: classes.cardFooter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Button, {\n    simple: true,\n    color: \"primary\",\n    size: \"lg\",\n    onClick: signup\n    /*disabled={isEmpty}*/\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Sign Up\"))))))), React.createElement(Footer, {\n    whiteFont: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/Jake/hairwebsite-web/src/views/RegisterPage/RegisterPage.js"],"names":["React","useState","useEffect","makeStyles","InputAdornment","Icon","Email","People","Header","HeaderLinks","Footer","GridContainer","GridItem","Button","Card","CardBody","CardHeader","CardFooter","CustomInput","styles","useHistory","Swal","image","logo","dashboardRoutes","useStyles","LoginPage","props","classes","push","cardAnimaton","setCardAnimation","firstName","setFirstName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isEmpty","setIsEmpty","signup","passwordsMatch","fire","icon","title","text","url","fetch","method","body","JSON","stringify","name","headers","setTimeout","rest","height","color","pageHeader","backgroundImage","backgroundSize","backgroundPosition","container","form","cardHeader","fullWidth","type","value","onChange","e","target","endAdornment","inputIconsColor","autoComplete","display","justifyContent","cardFooter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\";\n// core components\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\";\nimport { useHistory } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\n//import image from \"assets/img/bg7.jpg\";\nimport image from \"assets/img/hands-blow-drying-hair.jpg\";\n\nimport logo from \"assets/img/badge.png\";\n\nconst dashboardRoutes = [];\n\nconst useStyles = makeStyles(styles);\n\nconst LoginPage = (props)  =>{\n\n  const classes = useStyles();\n  const { push } = useHistory();\n\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isEmpty, setIsEmpty] = useState(true);\n\n  const signup = async () => {\n    if (!passwordsMatch()) {\n      return Swal.fire({\n        icon: 'warning',\n        title: \"Validation Error\",\n        text: \"Passwords Don't Match\",\n      });\n    }\n\n    try { \n    const url = \"http://localhost:8080/user/register\";\n    await fetch(url, \n      {\n        method: \"POST\",\n        body: JSON.stringify({ name: firstName, email, password }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    );\n    Swal.fire(\n      'Success!',\n      'Thank you for making an account with us!',\n      'success'\n    )\n    push(\"/login\");    \n    }catch(e) {\n      Swal.fire({\n        icon: 'error',\n        title: \"Error\",\n        text: e,\n      })\n    }\n  }\n\n  const passwordsMatch = () => password === confirmPassword\n\n  setTimeout(function() {\n    setCardAnimation(\"\");\n  }, 700);\n\n  const { ...rest } = props;\n  return (\n    <div>\n      <Header\n        color=\"transparent\"\n        routes={dashboardRoutes}\n        logo={logo}\n        brand=\"Hair by Dalton\"\n        rightLinks={<HeaderLinks />}\n        fixed\n        changeColorOnScroll={{\n          height: 400,\n          color: \"white\"\n        }}\n        {...rest}\n      />\n      <div\n        className={classes.pageHeader}\n        style={{\n          backgroundImage: \"url(\" + image + \")\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"top center\"\n        }}\n      >\n        <div className={classes.container}>\n          <GridContainer justify=\"center\">\n            <GridItem xs={12} sm={12} md={4}>\n              <Card className={classes[cardAnimaton]}>\n                <form className={classes.form}>\n                  <CardHeader color=\"primary\" className={classes.cardHeader}>\n                    <h4>Create Account</h4>\n                  </CardHeader>\n                  <CardBody>\n                    <CustomInput\n                      labelText=\"First Name\"\n                      id=\"first\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: \"text\",\n                        value: firstName,\n                        onChange: (e) => setFirstName(e.target.value),\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <People className={classes.inputIconsColor} />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                    <CustomInput\n                      labelText=\"Email\"\n                      id=\"email\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: \"email\",\n                        value: email,\n                        onChange: (e) => setEmail(e.target.value),\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <Email className={classes.inputIconsColor} />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                    <CustomInput\n                      labelText=\"Password\"\n                      id=\"pass\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: \"password\",\n                        value: password,\n                        onChange: (e) => setPassword(e.target.value),\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <Icon className={classes.inputIconsColor}>\n                              lock_outline\n                            </Icon>\n                          </InputAdornment>\n                        ),\n                        autoComplete: \"off\"\n                      }}\n                    />\n                    <CustomInput\n                      labelText=\"Confirm Password\"\n                      id=\"passConfirm\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: \"password\",\n                        value: confirmPassword,\n                        onChange: (e) => setConfirmPassword(e.target.value),\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <Icon className={classes.inputIconsColor}>\n                              lock_outline\n                            </Icon>\n                          </InputAdornment>\n                        ),\n                        autoComplete: \"off\"\n                      }}\n                    />\n                  </CardBody>\n                  <a href=\"/login\" style={{display: 'flex', justifyContent: 'center'}}>Already have an account? Login here</a>\n                  <CardFooter className={classes.cardFooter}>\n                    <Button simple color=\"primary\" size=\"lg\" onClick={signup} /*disabled={isEmpty}*/>\n                      Sign Up\n                    </Button>\n                  </CardFooter>\n                </form>\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </div>\n        <Footer whiteFont />\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}